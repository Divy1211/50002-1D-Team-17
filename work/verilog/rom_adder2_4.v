/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module rom_adder2_4 (
    input [4:0] test_case,
    output reg [4:0] num_cases,
    output reg [15:0] a,
    output reg [15:0] b,
    output reg [5:0] alufn,
    output reg [15:0] exp_out,
    output reg exp_z,
    output reg exp_v,
    output reg exp_n
  );
  
  
  
  localparam A = 128'h800080007fff7fff800080007fff7fff;
  
  localparam B = 128'hffff80007fff000100017fffffff8000;
  
  localparam ALUFN_SIGNAL = 48'h000000041041;
  
  localparam EXPECTED_OUTPUT_SUM = 128'h7fff0000fffe80007fff00018000ffff;
  
  localparam EXPECTED_OUTPUT_Z = 8'h40;
  
  localparam EXPECTED_OUTPUT_V = 8'hff;
  
  localparam EXPECTED_OUTPUT_N = 8'h33;
  
  always @* begin
    num_cases = 5'h08;
    a = A[(test_case)*16+15-:16];
    b = B[(test_case)*16+15-:16];
    alufn = ALUFN_SIGNAL[(test_case)*6+5-:6];
    exp_out = EXPECTED_OUTPUT_SUM[(test_case)*16+15-:16];
    exp_z = EXPECTED_OUTPUT_Z[(test_case)*1+0-:1];
    exp_v = EXPECTED_OUTPUT_V[(test_case)*1+0-:1];
    exp_n = EXPECTED_OUTPUT_N[(test_case)*1+0-:1];
  end
endmodule
