/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module game_fsm_4 (
    input clk,
    input rst,
    input button_0,
    input button_1,
    input button_2,
    input button_3,
    input button_4,
    input button_5,
    input button_6,
    input button_7,
    input button_8,
    input button_9,
    input button_a,
    input button_b,
    input button_c,
    input button_d,
    input button_asterisk,
    input button_hash,
    input [15:0] rb_data,
    output reg we,
    output reg [4:0] ra,
    output reg [4:0] rb,
    output reg [4:0] rc,
    output reg [15:0] literal,
    output reg asel,
    output reg bsel,
    output reg wdsel,
    output reg ra2sel,
    output reg [5:0] alufn,
    output reg start,
    output reg finished,
    output reg [7:0] state
  );
  
  
  
  wire [6-1:0] M_alu_op_code_add;
  wire [6-1:0] M_alu_op_code_sub;
  wire [6-1:0] M_alu_op_code_mul;
  wire [6-1:0] M_alu_op_code_div;
  wire [6-1:0] M_alu_op_code_mod;
  wire [6-1:0] M_alu_op_code_and;
  wire [6-1:0] M_alu_op_code_or;
  wire [6-1:0] M_alu_op_code_xor;
  wire [6-1:0] M_alu_op_code_t_a;
  wire [6-1:0] M_alu_op_code_nand;
  wire [6-1:0] M_alu_op_code_nor;
  wire [6-1:0] M_alu_op_code_xnor;
  wire [6-1:0] M_alu_op_code_t_b;
  wire [6-1:0] M_alu_op_code_shl;
  wire [6-1:0] M_alu_op_code_shr;
  wire [6-1:0] M_alu_op_code_sra;
  wire [6-1:0] M_alu_op_code_eq;
  wire [6-1:0] M_alu_op_code_lt;
  wire [6-1:0] M_alu_op_code_ltq;
  op_code_enum_7 alu_op_code (
    .add(M_alu_op_code_add),
    .sub(M_alu_op_code_sub),
    .mul(M_alu_op_code_mul),
    .div(M_alu_op_code_div),
    .mod(M_alu_op_code_mod),
    .and(M_alu_op_code_and),
    .or(M_alu_op_code_or),
    .xor(M_alu_op_code_xor),
    .t_a(M_alu_op_code_t_a),
    .nand(M_alu_op_code_nand),
    .nor(M_alu_op_code_nor),
    .xnor(M_alu_op_code_xnor),
    .t_b(M_alu_op_code_t_b),
    .shl(M_alu_op_code_shl),
    .shr(M_alu_op_code_shr),
    .sra(M_alu_op_code_sra),
    .eq(M_alu_op_code_eq),
    .lt(M_alu_op_code_lt),
    .ltq(M_alu_op_code_ltq)
  );
  
  wire [5-1:0] M_regfile_addr_box00;
  wire [5-1:0] M_regfile_addr_box01;
  wire [5-1:0] M_regfile_addr_box02;
  wire [5-1:0] M_regfile_addr_box10;
  wire [5-1:0] M_regfile_addr_box11;
  wire [5-1:0] M_regfile_addr_box12;
  wire [5-1:0] M_regfile_addr_box20;
  wire [5-1:0] M_regfile_addr_box21;
  wire [5-1:0] M_regfile_addr_box22;
  wire [5-1:0] M_regfile_addr_pieces_remaining_small_p1;
  wire [5-1:0] M_regfile_addr_pieces_remaining_small_p2;
  wire [5-1:0] M_regfile_addr_pieces_remaining_med_p1;
  wire [5-1:0] M_regfile_addr_pieces_remaining_med_p2;
  wire [5-1:0] M_regfile_addr_pieces_remaining_large_p1;
  wire [5-1:0] M_regfile_addr_pieces_remaining_large_p2;
  wire [5-1:0] M_regfile_addr_selected_size_p1;
  wire [5-1:0] M_regfile_addr_selected_size_p2;
  wire [5-1:0] M_regfile_addr_winner;
  wire [5-1:0] M_regfile_addr_box_addr;
  wire [5-1:0] M_regfile_addr_temp1;
  wire [5-1:0] M_regfile_addr_temp2;
  wire [5-1:0] M_regfile_addr_temp3;
  wire [5-1:0] M_regfile_addr_temp4;
  wire [5-1:0] M_regfile_addr_temp5;
  wire [5-1:0] M_regfile_addr_temp6;
  wire [5-1:0] M_regfile_addr_temp7;
  wire [5-1:0] M_regfile_addr_temp8;
  wire [5-1:0] M_regfile_addr_temp9;
  wire [5-1:0] M_regfile_addr_temp10;
  wire [5-1:0] M_regfile_addr_temp11;
  wire [5-1:0] M_regfile_addr_temp12;
  wire [5-1:0] M_regfile_addr_temp13;
  regfile_address_enum_8 regfile_addr (
    .box00(M_regfile_addr_box00),
    .box01(M_regfile_addr_box01),
    .box02(M_regfile_addr_box02),
    .box10(M_regfile_addr_box10),
    .box11(M_regfile_addr_box11),
    .box12(M_regfile_addr_box12),
    .box20(M_regfile_addr_box20),
    .box21(M_regfile_addr_box21),
    .box22(M_regfile_addr_box22),
    .pieces_remaining_small_p1(M_regfile_addr_pieces_remaining_small_p1),
    .pieces_remaining_small_p2(M_regfile_addr_pieces_remaining_small_p2),
    .pieces_remaining_med_p1(M_regfile_addr_pieces_remaining_med_p1),
    .pieces_remaining_med_p2(M_regfile_addr_pieces_remaining_med_p2),
    .pieces_remaining_large_p1(M_regfile_addr_pieces_remaining_large_p1),
    .pieces_remaining_large_p2(M_regfile_addr_pieces_remaining_large_p2),
    .selected_size_p1(M_regfile_addr_selected_size_p1),
    .selected_size_p2(M_regfile_addr_selected_size_p2),
    .winner(M_regfile_addr_winner),
    .box_addr(M_regfile_addr_box_addr),
    .temp1(M_regfile_addr_temp1),
    .temp2(M_regfile_addr_temp2),
    .temp3(M_regfile_addr_temp3),
    .temp4(M_regfile_addr_temp4),
    .temp5(M_regfile_addr_temp5),
    .temp6(M_regfile_addr_temp6),
    .temp7(M_regfile_addr_temp7),
    .temp8(M_regfile_addr_temp8),
    .temp9(M_regfile_addr_temp9),
    .temp10(M_regfile_addr_temp10),
    .temp11(M_regfile_addr_temp11),
    .temp12(M_regfile_addr_temp12),
    .temp13(M_regfile_addr_temp13)
  );
  
  localparam START_game_state = 8'd0;
  localparam MAKE_BOX_00_MIN_P1_game_state = 8'd1;
  localparam CHECK_BOX_01_MIN_P1_game_state = 8'd2;
  localparam MAKE_BOX_01_MIN_P1_game_state = 8'd3;
  localparam CHECK_BOX_02_MIN_P1_game_state = 8'd4;
  localparam MAKE_BOX_02_MIN_P1_game_state = 8'd5;
  localparam CHECK_BOX_10_MIN_P1_game_state = 8'd6;
  localparam MAKE_BOX_10_MIN_P1_game_state = 8'd7;
  localparam CHECK_BOX_11_MIN_P1_game_state = 8'd8;
  localparam MAKE_BOX_11_MIN_P1_game_state = 8'd9;
  localparam CHECK_BOX_12_MIN_P1_game_state = 8'd10;
  localparam MAKE_BOX_12_MIN_P1_game_state = 8'd11;
  localparam CHECK_BOX_20_MIN_P1_game_state = 8'd12;
  localparam MAKE_BOX_20_MIN_P1_game_state = 8'd13;
  localparam CHECK_BOX_21_MIN_P1_game_state = 8'd14;
  localparam MAKE_BOX_21_MIN_P1_game_state = 8'd15;
  localparam CHECK_BOX_22_MIN_P1_game_state = 8'd16;
  localparam MAKE_BOX_22_MIN_P1_game_state = 8'd17;
  localparam CHECK_SMALL_PIECES_P1_PT1_game_state = 8'd18;
  localparam CHECK_SMALL_PIECES_P1_PT2_game_state = 8'd19;
  localparam CHECK_SMALL_PIECES_P1_PT3_game_state = 8'd20;
  localparam CHECK_SMALL_PIECES_P1_PT4_game_state = 8'd21;
  localparam CHECK_SMALL_PIECES_P1_PT5_game_state = 8'd22;
  localparam CHECK_MED_PIECES_P1_PT1_game_state = 8'd23;
  localparam CHECK_MED_PIECES_P1_PT2_game_state = 8'd24;
  localparam CHECK_MED_PIECES_P1_PT3_game_state = 8'd25;
  localparam CHECK_MED_PIECES_P1_PT4_game_state = 8'd26;
  localparam CHECK_MED_PIECES_P1_PT5_game_state = 8'd27;
  localparam CHECK_LARGE_PIECES_P1_PT1_game_state = 8'd28;
  localparam CHECK_LARGE_PIECES_P1_PT2_game_state = 8'd29;
  localparam CHECK_LARGE_PIECES_P1_PT3_game_state = 8'd30;
  localparam CHECK_LARGE_PIECES_P1_PT4_game_state = 8'd31;
  localparam CHECK_LARGE_PIECES_P1_PT5_game_state = 8'd32;
  localparam SELECT_BOX_P1_game_state = 8'd33;
  localparam SELECT_SIZE_P1_game_state = 8'd34;
  localparam CHECK_SIZE_SMALL_P1_game_state = 8'd35;
  localparam CHECK_SIZE_MED_P1_game_state = 8'd36;
  localparam CHECK_SIZE_LARGE_P1_game_state = 8'd37;
  localparam VALIDATE_PLACEMENT_P1_PT1_game_state = 8'd38;
  localparam VALIDATE_PLACEMENT_P1_PT2_game_state = 8'd39;
  localparam VALIDATE_PLACEMENT_P1_PT3_game_state = 8'd40;
  localparam VALIDATE_PLACEMENT_P1_PT4_game_state = 8'd41;
  localparam PLACE_PIECE_P1_game_state = 8'd42;
  localparam COMPLETE_ROW_0_CHECK_BOX_00_P1_game_state = 8'd43;
  localparam COMPLETE_ROW_0_CHECK_BOX_01_P1_game_state = 8'd44;
  localparam COMPLETE_ROW_0_CHECK_BOX_02_P1_game_state = 8'd45;
  localparam COMPLETE_ROW_1_CHECK_BOX_10_P1_game_state = 8'd46;
  localparam COMPLETE_ROW_1_CHECK_BOX_11_P1_game_state = 8'd47;
  localparam COMPLETE_ROW_1_CHECK_BOX_12_P1_game_state = 8'd48;
  localparam COMPLETE_ROW_2_CHECK_BOX_20_P1_game_state = 8'd49;
  localparam COMPLETE_ROW_2_CHECK_BOX_21_P1_game_state = 8'd50;
  localparam COMPLETE_ROW_2_CHECK_BOX_22_P1_game_state = 8'd51;
  localparam COMPLETE_COL_0_CHECK_BOX_00_P1_game_state = 8'd52;
  localparam COMPLETE_COL_1_CHECK_BOX_10_P1_game_state = 8'd53;
  localparam COMPLETE_COL_2_CHECK_BOX_20_P1_game_state = 8'd54;
  localparam COMPLETE_COL_0_CHECK_BOX_01_P1_game_state = 8'd55;
  localparam COMPLETE_COL_1_CHECK_BOX_11_P1_game_state = 8'd56;
  localparam COMPLETE_COL_2_CHECK_BOX_21_P1_game_state = 8'd57;
  localparam COMPLETE_COL_0_CHECK_BOX_02_P1_game_state = 8'd58;
  localparam COMPLETE_COL_1_CHECK_BOX_12_P1_game_state = 8'd59;
  localparam COMPLETE_COL_2_CHECK_BOX_22_P1_game_state = 8'd60;
  localparam COMPLETE_DIA_0_CHECK_BOX_00_P1_game_state = 8'd61;
  localparam COMPLETE_DIA_0_CHECK_BOX_11_P1_game_state = 8'd62;
  localparam COMPLETE_DIA_0_CHECK_BOX_22_P1_game_state = 8'd63;
  localparam COMPLETE_DIA_1_CHECK_BOX_20_P1_game_state = 8'd64;
  localparam COMPLETE_DIA_1_CHECK_BOX_11_P1_game_state = 8'd65;
  localparam COMPLETE_DIA_1_CHECK_BOX_02_P1_game_state = 8'd66;
  localparam HAS_P1_WON_game_state = 8'd67;
  localparam MAKE_BOX_00_MIN_P2_game_state = 8'd68;
  localparam CHECK_BOX_01_MIN_P2_game_state = 8'd69;
  localparam MAKE_BOX_01_MIN_P2_game_state = 8'd70;
  localparam CHECK_BOX_02_MIN_P2_game_state = 8'd71;
  localparam MAKE_BOX_02_MIN_P2_game_state = 8'd72;
  localparam CHECK_BOX_10_MIN_P2_game_state = 8'd73;
  localparam MAKE_BOX_10_MIN_P2_game_state = 8'd74;
  localparam CHECK_BOX_11_MIN_P2_game_state = 8'd75;
  localparam MAKE_BOX_11_MIN_P2_game_state = 8'd76;
  localparam CHECK_BOX_12_MIN_P2_game_state = 8'd77;
  localparam MAKE_BOX_12_MIN_P2_game_state = 8'd78;
  localparam CHECK_BOX_20_MIN_P2_game_state = 8'd79;
  localparam MAKE_BOX_20_MIN_P2_game_state = 8'd80;
  localparam CHECK_BOX_21_MIN_P2_game_state = 8'd81;
  localparam MAKE_BOX_21_MIN_P2_game_state = 8'd82;
  localparam CHECK_BOX_22_MIN_P2_game_state = 8'd83;
  localparam MAKE_BOX_22_MIN_P2_game_state = 8'd84;
  localparam CHECK_SMALL_PIECES_P2_PT1_game_state = 8'd85;
  localparam CHECK_SMALL_PIECES_P2_PT2_game_state = 8'd86;
  localparam CHECK_SMALL_PIECES_P2_PT3_game_state = 8'd87;
  localparam CHECK_SMALL_PIECES_P2_PT4_game_state = 8'd88;
  localparam CHECK_SMALL_PIECES_P2_PT5_game_state = 8'd89;
  localparam CHECK_MED_PIECES_P2_PT1_game_state = 8'd90;
  localparam CHECK_MED_PIECES_P2_PT2_game_state = 8'd91;
  localparam CHECK_MED_PIECES_P2_PT3_game_state = 8'd92;
  localparam CHECK_MED_PIECES_P2_PT4_game_state = 8'd93;
  localparam CHECK_MED_PIECES_P2_PT5_game_state = 8'd94;
  localparam CHECK_LARGE_PIECES_P2_PT1_game_state = 8'd95;
  localparam CHECK_LARGE_PIECES_P2_PT2_game_state = 8'd96;
  localparam CHECK_LARGE_PIECES_P2_PT3_game_state = 8'd97;
  localparam CHECK_LARGE_PIECES_P2_PT4_game_state = 8'd98;
  localparam CHECK_LARGE_PIECES_P2_PT5_game_state = 8'd99;
  localparam SELECT_BOX_P2_game_state = 8'd100;
  localparam SELECT_SIZE_P2_game_state = 8'd101;
  localparam CHECK_SIZE_SMALL_P2_game_state = 8'd102;
  localparam CHECK_SIZE_MED_P2_game_state = 8'd103;
  localparam CHECK_SIZE_LARGE_P2_game_state = 8'd104;
  localparam VALIDATE_PLACEMENT_P2_PT1_game_state = 8'd105;
  localparam VALIDATE_PLACEMENT_P2_PT2_game_state = 8'd106;
  localparam VALIDATE_PLACEMENT_P2_PT3_game_state = 8'd107;
  localparam VALIDATE_PLACEMENT_P2_PT4_game_state = 8'd108;
  localparam PLACE_PIECE_P2_game_state = 8'd109;
  localparam COMPLETE_ROW_0_CHECK_BOX_00_P2_game_state = 8'd110;
  localparam COMPLETE_ROW_0_CHECK_BOX_01_P2_game_state = 8'd111;
  localparam COMPLETE_ROW_0_CHECK_BOX_02_P2_game_state = 8'd112;
  localparam COMPLETE_ROW_1_CHECK_BOX_10_P2_game_state = 8'd113;
  localparam COMPLETE_ROW_1_CHECK_BOX_11_P2_game_state = 8'd114;
  localparam COMPLETE_ROW_1_CHECK_BOX_12_P2_game_state = 8'd115;
  localparam COMPLETE_ROW_2_CHECK_BOX_20_P2_game_state = 8'd116;
  localparam COMPLETE_ROW_2_CHECK_BOX_21_P2_game_state = 8'd117;
  localparam COMPLETE_ROW_2_CHECK_BOX_22_P2_game_state = 8'd118;
  localparam COMPLETE_COL_0_CHECK_BOX_00_P2_game_state = 8'd119;
  localparam COMPLETE_COL_1_CHECK_BOX_10_P2_game_state = 8'd120;
  localparam COMPLETE_COL_2_CHECK_BOX_20_P2_game_state = 8'd121;
  localparam COMPLETE_COL_0_CHECK_BOX_01_P2_game_state = 8'd122;
  localparam COMPLETE_COL_1_CHECK_BOX_11_P2_game_state = 8'd123;
  localparam COMPLETE_COL_2_CHECK_BOX_21_P2_game_state = 8'd124;
  localparam COMPLETE_COL_0_CHECK_BOX_02_P2_game_state = 8'd125;
  localparam COMPLETE_COL_1_CHECK_BOX_12_P2_game_state = 8'd126;
  localparam COMPLETE_COL_2_CHECK_BOX_22_P2_game_state = 8'd127;
  localparam COMPLETE_DIA_0_CHECK_BOX_00_P2_game_state = 8'd128;
  localparam COMPLETE_DIA_0_CHECK_BOX_11_P2_game_state = 8'd129;
  localparam COMPLETE_DIA_0_CHECK_BOX_22_P2_game_state = 8'd130;
  localparam COMPLETE_DIA_1_CHECK_BOX_20_P2_game_state = 8'd131;
  localparam COMPLETE_DIA_1_CHECK_BOX_11_P2_game_state = 8'd132;
  localparam COMPLETE_DIA_1_CHECK_BOX_02_P2_game_state = 8'd133;
  localparam HAS_P2_WON_game_state = 8'd134;
  localparam DECLARE_P1_WINNER_game_state = 8'd135;
  localparam DECLARE_P2_WINNER_game_state = 8'd136;
  localparam DECLARE_DRAW_game_state = 8'd137;
  localparam END_game_state = 8'd138;
  
  reg [7:0] M_game_state_d, M_game_state_q = START_game_state;
  
  always @* begin
    M_game_state_d = M_game_state_q;
    
    we = 1'h0;
    ra = 1'h0;
    rb = 1'h0;
    rc = 1'h0;
    asel = 1'h0;
    bsel = 1'h0;
    wdsel = 1'h0;
    ra2sel = 1'h0;
    alufn = 1'h0;
    start = 1'h0;
    finished = 1'h0;
    literal = 1'h0;
    state = M_game_state_q;
    
    case (M_game_state_q)
      START_game_state: begin
        if ((|{button_0, button_asterisk, button_hash})) begin
          start = 1'h1;
          M_game_state_d = MAKE_BOX_00_MIN_P1_game_state;
        end
      end
      MAKE_BOX_00_MIN_P1_game_state: begin
        ra = M_regfile_addr_box00;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = 1'h1;
        M_game_state_d = CHECK_BOX_01_MIN_P1_game_state;
      end
      CHECK_BOX_01_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box01;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_01_MIN_P1_game_state;
      end
      MAKE_BOX_01_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box01;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_02_MIN_P1_game_state;
      end
      CHECK_BOX_02_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box02;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_02_MIN_P1_game_state;
      end
      MAKE_BOX_02_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box02;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_10_MIN_P1_game_state;
      end
      CHECK_BOX_10_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box10;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_10_MIN_P1_game_state;
      end
      MAKE_BOX_10_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box10;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_11_MIN_P1_game_state;
      end
      CHECK_BOX_11_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box11;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_11_MIN_P1_game_state;
      end
      MAKE_BOX_11_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box11;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_12_MIN_P1_game_state;
      end
      CHECK_BOX_12_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box12;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_12_MIN_P1_game_state;
      end
      MAKE_BOX_12_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box12;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_20_MIN_P1_game_state;
      end
      CHECK_BOX_20_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box20;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_20_MIN_P1_game_state;
      end
      MAKE_BOX_20_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box20;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_21_MIN_P1_game_state;
      end
      CHECK_BOX_21_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box21;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_21_MIN_P1_game_state;
      end
      MAKE_BOX_21_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box21;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_22_MIN_P1_game_state;
      end
      CHECK_BOX_22_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box22;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_22_MIN_P1_game_state;
      end
      MAKE_BOX_22_MIN_P1_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box22;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_SMALL_PIECES_P1_PT1_game_state;
      end
      CHECK_SMALL_PIECES_P1_PT1_game_state: begin
        asel = 1'h1;
        rb = M_regfile_addr_pieces_remaining_small_p1;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_SMALL_PIECES_P1_PT2_game_state;
      end
      CHECK_SMALL_PIECES_P1_PT2_game_state: begin
        rb = M_regfile_addr_temp2;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_MED_PIECES_P1_PT1_game_state;
        end else begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_SMALL_PIECES_P1_PT3_game_state;
        end
      end
      CHECK_SMALL_PIECES_P1_PT3_game_state: begin
        literal = 4'h8;
        bsel = 1'h1;
        ra = M_regfile_addr_temp1;
        alufn = M_alu_op_code_sub;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_SMALL_PIECES_P1_PT4_game_state;
      end
      CHECK_SMALL_PIECES_P1_PT4_game_state: begin
        literal = $signed(3'h6);
        bsel = 1'h1;
        ra = M_regfile_addr_temp2;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_SMALL_PIECES_P1_PT5_game_state;
      end
      CHECK_SMALL_PIECES_P1_PT5_game_state: begin
        rb = M_regfile_addr_temp2;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_MED_PIECES_P1_PT1_game_state;
        end else begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = SELECT_BOX_P1_game_state;
        end
      end
      CHECK_MED_PIECES_P1_PT1_game_state: begin
        asel = 1'h1;
        rb = M_regfile_addr_pieces_remaining_med_p1;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_MED_PIECES_P1_PT2_game_state;
      end
      CHECK_MED_PIECES_P1_PT2_game_state: begin
        rb = M_regfile_addr_temp2;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_LARGE_PIECES_P1_PT1_game_state;
        end else begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_MED_PIECES_P1_PT3_game_state;
        end
      end
      CHECK_MED_PIECES_P1_PT3_game_state: begin
        literal = 4'he;
        bsel = 1'h1;
        ra = M_regfile_addr_temp1;
        alufn = M_alu_op_code_sub;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_MED_PIECES_P1_PT4_game_state;
      end
      CHECK_MED_PIECES_P1_PT4_game_state: begin
        literal = $signed(3'h6);
        bsel = 1'h1;
        ra = M_regfile_addr_temp2;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_MED_PIECES_P1_PT5_game_state;
      end
      CHECK_MED_PIECES_P1_PT5_game_state: begin
        rb = M_regfile_addr_temp2;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_LARGE_PIECES_P1_PT1_game_state;
        end else begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = SELECT_BOX_P1_game_state;
        end
      end
      CHECK_LARGE_PIECES_P1_PT1_game_state: begin
        asel = 1'h1;
        rb = M_regfile_addr_pieces_remaining_large_p1;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_LARGE_PIECES_P1_PT2_game_state;
      end
      CHECK_LARGE_PIECES_P1_PT2_game_state: begin
        rb = M_regfile_addr_temp2;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = DECLARE_DRAW_game_state;
        end else begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_LARGE_PIECES_P1_PT3_game_state;
        end
      end
      CHECK_LARGE_PIECES_P1_PT3_game_state: begin
        literal = 5'h14;
        bsel = 1'h1;
        ra = M_regfile_addr_temp1;
        alufn = M_alu_op_code_sub;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_LARGE_PIECES_P1_PT4_game_state;
      end
      CHECK_LARGE_PIECES_P1_PT4_game_state: begin
        literal = $signed(3'h6);
        bsel = 1'h1;
        ra = M_regfile_addr_temp2;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_LARGE_PIECES_P1_PT5_game_state;
      end
      CHECK_LARGE_PIECES_P1_PT5_game_state: begin
        rb = M_regfile_addr_temp2;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = DECLARE_DRAW_game_state;
        end else begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = SELECT_BOX_P1_game_state;
        end
      end
      SELECT_BOX_P1_game_state: begin
        if (button_1) begin
          ra = M_regfile_addr_box00;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P1_game_state;
        end
        if (button_2) begin
          ra = M_regfile_addr_box01;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P1_game_state;
        end
        if (button_3) begin
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P1_game_state;
        end
        if (button_4) begin
          ra = M_regfile_addr_box10;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P1_game_state;
        end
        if (button_5) begin
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P1_game_state;
        end
        if (button_6) begin
          ra = M_regfile_addr_box12;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P1_game_state;
        end
        if (button_7) begin
          ra = M_regfile_addr_box20;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P1_game_state;
        end
        if (button_8) begin
          ra = M_regfile_addr_box21;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P1_game_state;
        end
        if (button_9) begin
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P1_game_state;
        end
      end
      SELECT_SIZE_P1_game_state: begin
        if (button_a) begin
          asel = 1'h1;
          rb = M_regfile_addr_pieces_remaining_small_p1;
          alufn = M_alu_op_code_lt;
          rc = M_regfile_addr_temp1;
          we = 1'h1;
          M_game_state_d = CHECK_SIZE_SMALL_P1_game_state;
        end
        if (button_b) begin
          asel = 1'h1;
          rb = M_regfile_addr_pieces_remaining_med_p1;
          alufn = M_alu_op_code_lt;
          rc = M_regfile_addr_temp1;
          we = 1'h1;
          M_game_state_d = CHECK_SIZE_MED_P1_game_state;
        end
        if (button_c) begin
          asel = 1'h1;
          rb = M_regfile_addr_pieces_remaining_large_p1;
          alufn = M_alu_op_code_lt;
          rc = M_regfile_addr_temp1;
          we = 1'h1;
          M_game_state_d = CHECK_SIZE_LARGE_P1_game_state;
        end
        if (button_d) begin
          asel = 1'h1;
          rb = 1'h0;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_BOX_P1_game_state;
        end
      end
      CHECK_SIZE_SMALL_P1_game_state: begin
        rb = M_regfile_addr_temp1;
        if (rb_data == 1'h0) begin
          literal = 4'h8;
          rb = M_regfile_addr_temp1;
          bsel = 1'h1;
          alufn = M_alu_op_code_t_b;
          rc = M_regfile_addr_selected_size_p1;
          we = rb_data[0+0-:1];
          M_game_state_d = SELECT_BOX_P1_game_state;
        end else begin
          literal = 4'h8;
          rb = M_regfile_addr_temp1;
          bsel = 1'h1;
          alufn = M_alu_op_code_t_b;
          rc = M_regfile_addr_selected_size_p1;
          we = rb_data[0+0-:1];
          M_game_state_d = VALIDATE_PLACEMENT_P1_PT1_game_state;
        end
      end
      CHECK_SIZE_MED_P1_game_state: begin
        rb = M_regfile_addr_temp1;
        if (rb_data == 1'h0) begin
          literal = 4'he;
          rb = M_regfile_addr_temp1;
          bsel = 1'h1;
          alufn = M_alu_op_code_t_b;
          rc = M_regfile_addr_selected_size_p1;
          we = rb_data[0+0-:1];
          M_game_state_d = SELECT_BOX_P1_game_state;
        end else begin
          literal = 4'he;
          rb = M_regfile_addr_temp1;
          bsel = 1'h1;
          alufn = M_alu_op_code_t_b;
          rc = M_regfile_addr_selected_size_p1;
          we = rb_data[0+0-:1];
          M_game_state_d = VALIDATE_PLACEMENT_P1_PT1_game_state;
        end
      end
      CHECK_SIZE_LARGE_P1_game_state: begin
        rb = M_regfile_addr_temp1;
        if (rb_data == 1'h0) begin
          literal = 5'h14;
          rb = M_regfile_addr_temp1;
          bsel = 1'h1;
          alufn = M_alu_op_code_t_b;
          rc = M_regfile_addr_selected_size_p1;
          we = rb_data[0+0-:1];
          M_game_state_d = SELECT_BOX_P1_game_state;
        end else begin
          literal = 5'h14;
          rb = M_regfile_addr_temp1;
          bsel = 1'h1;
          alufn = M_alu_op_code_t_b;
          rc = M_regfile_addr_selected_size_p1;
          we = rb_data[0+0-:1];
          M_game_state_d = VALIDATE_PLACEMENT_P1_PT1_game_state;
        end
      end
      VALIDATE_PLACEMENT_P1_PT1_game_state: begin
        rb = M_regfile_addr_box_addr;
        ra = rb_data[0+4-:5];
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = VALIDATE_PLACEMENT_P1_PT2_game_state;
      end
      VALIDATE_PLACEMENT_P1_PT2_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_selected_size_p1;
        alufn = M_alu_op_code_sub;
        rc = M_regfile_addr_temp3;
        we = 1'h1;
        M_game_state_d = VALIDATE_PLACEMENT_P1_PT3_game_state;
      end
      VALIDATE_PLACEMENT_P1_PT3_game_state: begin
        literal = 2'h2;
        bsel = 1'h1;
        ra = M_regfile_addr_temp3;
        alufn = M_alu_op_code_ltq;
        rc = M_regfile_addr_temp3;
        we = 1'h1;
        M_game_state_d = VALIDATE_PLACEMENT_P1_PT4_game_state;
      end
      VALIDATE_PLACEMENT_P1_PT4_game_state: begin
        rb = M_regfile_addr_temp3;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp3;
          M_game_state_d = PLACE_PIECE_P1_game_state;
        end else begin
          rb = M_regfile_addr_temp3;
          M_game_state_d = SELECT_BOX_P1_game_state;
        end
      end
      PLACE_PIECE_P1_game_state: begin
        rb = M_regfile_addr_selected_size_p1;
        ra = M_regfile_addr_box_addr;
        alufn = M_alu_op_code_t_b;
        ra2sel = 1'h1;
        we = 1'h1;
        M_game_state_d = COMPLETE_ROW_0_CHECK_BOX_00_P1_game_state;
      end
      COMPLETE_ROW_0_CHECK_BOX_00_P1_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box00;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_ROW_0_CHECK_BOX_01_P1_game_state;
      end
      COMPLETE_ROW_0_CHECK_BOX_01_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box01;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_1_CHECK_BOX_10_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box01;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_0_CHECK_BOX_02_P1_game_state;
        end
      end
      COMPLETE_ROW_0_CHECK_BOX_02_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_1_CHECK_BOX_10_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P1_WON_game_state;
        end
      end
      COMPLETE_ROW_1_CHECK_BOX_10_P1_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box10;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_ROW_1_CHECK_BOX_11_P1_game_state;
      end
      COMPLETE_ROW_1_CHECK_BOX_11_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_2_CHECK_BOX_20_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_1_CHECK_BOX_12_P1_game_state;
        end
      end
      COMPLETE_ROW_1_CHECK_BOX_12_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box12;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_2_CHECK_BOX_20_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box12;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P1_WON_game_state;
        end
      end
      COMPLETE_ROW_2_CHECK_BOX_20_P1_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box20;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_ROW_2_CHECK_BOX_21_P1_game_state;
      end
      COMPLETE_ROW_2_CHECK_BOX_21_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box21;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_0_CHECK_BOX_00_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box21;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_2_CHECK_BOX_22_P1_game_state;
        end
      end
      COMPLETE_ROW_2_CHECK_BOX_22_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_0_CHECK_BOX_00_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P1_WON_game_state;
        end
      end
      COMPLETE_COL_0_CHECK_BOX_00_P1_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box00;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_COL_0_CHECK_BOX_01_P1_game_state;
      end
      COMPLETE_COL_1_CHECK_BOX_10_P1_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box10;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_COL_1_CHECK_BOX_11_P1_game_state;
      end
      COMPLETE_COL_2_CHECK_BOX_20_P1_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box20;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_COL_2_CHECK_BOX_21_P1_game_state;
      end
      COMPLETE_COL_0_CHECK_BOX_01_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box01;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_1_CHECK_BOX_10_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box01;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_0_CHECK_BOX_02_P1_game_state;
        end
      end
      COMPLETE_COL_1_CHECK_BOX_11_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_2_CHECK_BOX_20_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_1_CHECK_BOX_12_P1_game_state;
        end
      end
      COMPLETE_COL_2_CHECK_BOX_21_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box21;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_DIA_0_CHECK_BOX_00_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box21;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_2_CHECK_BOX_22_P1_game_state;
        end
      end
      COMPLETE_COL_0_CHECK_BOX_02_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_1_CHECK_BOX_10_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P1_WON_game_state;
        end
      end
      COMPLETE_COL_1_CHECK_BOX_12_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box12;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_2_CHECK_BOX_20_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box12;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P1_WON_game_state;
        end
      end
      COMPLETE_COL_2_CHECK_BOX_22_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_DIA_0_CHECK_BOX_00_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P1_WON_game_state;
        end
      end
      COMPLETE_DIA_0_CHECK_BOX_00_P1_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box00;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_DIA_0_CHECK_BOX_11_P1_game_state;
      end
      COMPLETE_DIA_0_CHECK_BOX_11_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_DIA_1_CHECK_BOX_20_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_DIA_0_CHECK_BOX_22_P1_game_state;
        end
      end
      COMPLETE_DIA_0_CHECK_BOX_22_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_DIA_1_CHECK_BOX_20_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P1_WON_game_state;
        end
      end
      COMPLETE_DIA_1_CHECK_BOX_20_P1_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box20;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_DIA_1_CHECK_BOX_11_P1_game_state;
      end
      COMPLETE_DIA_1_CHECK_BOX_11_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = SELECT_BOX_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_DIA_1_CHECK_BOX_02_P1_game_state;
        end
      end
      COMPLETE_DIA_1_CHECK_BOX_02_P1_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[1+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = SELECT_BOX_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P1_WON_game_state;
        end
      end
      HAS_P1_WON_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp4;
          M_game_state_d = MAKE_BOX_00_MIN_P2_game_state;
        end else begin
          rb = M_regfile_addr_temp4;
          M_game_state_d = DECLARE_P1_WINNER_game_state;
        end
      end
      MAKE_BOX_00_MIN_P2_game_state: begin
        ra = M_regfile_addr_box00;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = 1'h1;
        M_game_state_d = CHECK_BOX_01_MIN_P2_game_state;
      end
      CHECK_BOX_01_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box01;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_01_MIN_P2_game_state;
      end
      MAKE_BOX_01_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box01;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_02_MIN_P2_game_state;
      end
      CHECK_BOX_02_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box02;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_02_MIN_P2_game_state;
      end
      MAKE_BOX_02_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box02;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_10_MIN_P2_game_state;
      end
      CHECK_BOX_10_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box10;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_10_MIN_P2_game_state;
      end
      MAKE_BOX_10_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box10;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_11_MIN_P2_game_state;
      end
      CHECK_BOX_11_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box11;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_11_MIN_P2_game_state;
      end
      MAKE_BOX_11_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box11;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_12_MIN_P2_game_state;
      end
      CHECK_BOX_12_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box12;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_12_MIN_P2_game_state;
      end
      MAKE_BOX_12_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box12;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_20_MIN_P2_game_state;
      end
      CHECK_BOX_20_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box20;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_20_MIN_P2_game_state;
      end
      MAKE_BOX_20_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box20;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_21_MIN_P2_game_state;
      end
      CHECK_BOX_21_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box21;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_21_MIN_P2_game_state;
      end
      MAKE_BOX_21_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box21;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_BOX_22_MIN_P2_game_state;
      end
      CHECK_BOX_22_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp1;
        ra = M_regfile_addr_box22;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = MAKE_BOX_22_MIN_P2_game_state;
      end
      MAKE_BOX_22_MIN_P2_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_box22;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp1;
        we = rb_data[0+0-:1];
        M_game_state_d = CHECK_SMALL_PIECES_P2_PT1_game_state;
      end
      CHECK_SMALL_PIECES_P2_PT1_game_state: begin
        asel = 1'h1;
        rb = M_regfile_addr_pieces_remaining_small_p2;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_SMALL_PIECES_P2_PT2_game_state;
      end
      CHECK_SMALL_PIECES_P2_PT2_game_state: begin
        rb = M_regfile_addr_temp2;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_MED_PIECES_P2_PT1_game_state;
        end else begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_SMALL_PIECES_P2_PT3_game_state;
        end
      end
      CHECK_SMALL_PIECES_P2_PT3_game_state: begin
        literal = 4'ha;
        bsel = 1'h1;
        ra = M_regfile_addr_temp1;
        alufn = M_alu_op_code_sub;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_SMALL_PIECES_P2_PT4_game_state;
      end
      CHECK_SMALL_PIECES_P2_PT4_game_state: begin
        literal = $signed(3'h6);
        bsel = 1'h1;
        ra = M_regfile_addr_temp2;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_SMALL_PIECES_P2_PT5_game_state;
      end
      CHECK_SMALL_PIECES_P2_PT5_game_state: begin
        rb = M_regfile_addr_temp2;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_MED_PIECES_P2_PT1_game_state;
        end else begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = SELECT_BOX_P2_game_state;
        end
      end
      CHECK_MED_PIECES_P2_PT1_game_state: begin
        asel = 1'h1;
        rb = M_regfile_addr_pieces_remaining_med_p2;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_MED_PIECES_P2_PT2_game_state;
      end
      CHECK_MED_PIECES_P2_PT2_game_state: begin
        rb = M_regfile_addr_temp2;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_LARGE_PIECES_P2_PT1_game_state;
        end else begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_MED_PIECES_P2_PT3_game_state;
        end
      end
      CHECK_MED_PIECES_P2_PT3_game_state: begin
        literal = 5'h10;
        bsel = 1'h1;
        ra = M_regfile_addr_temp1;
        alufn = M_alu_op_code_sub;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_MED_PIECES_P2_PT4_game_state;
      end
      CHECK_MED_PIECES_P2_PT4_game_state: begin
        literal = $signed(3'h6);
        bsel = 1'h1;
        ra = M_regfile_addr_temp2;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_MED_PIECES_P2_PT5_game_state;
      end
      CHECK_MED_PIECES_P2_PT5_game_state: begin
        rb = M_regfile_addr_temp2;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_LARGE_PIECES_P2_PT1_game_state;
        end else begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = SELECT_BOX_P2_game_state;
        end
      end
      CHECK_LARGE_PIECES_P2_PT1_game_state: begin
        asel = 1'h1;
        rb = M_regfile_addr_pieces_remaining_large_p2;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_LARGE_PIECES_P2_PT2_game_state;
      end
      CHECK_LARGE_PIECES_P2_PT2_game_state: begin
        rb = M_regfile_addr_temp2;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = DECLARE_DRAW_game_state;
        end else begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = CHECK_LARGE_PIECES_P2_PT3_game_state;
        end
      end
      CHECK_LARGE_PIECES_P2_PT3_game_state: begin
        literal = 5'h16;
        bsel = 1'h1;
        ra = M_regfile_addr_temp1;
        alufn = M_alu_op_code_sub;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_LARGE_PIECES_P2_PT4_game_state;
      end
      CHECK_LARGE_PIECES_P2_PT4_game_state: begin
        literal = $signed(3'h6);
        bsel = 1'h1;
        ra = M_regfile_addr_temp2;
        alufn = M_alu_op_code_lt;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = CHECK_LARGE_PIECES_P2_PT5_game_state;
      end
      CHECK_LARGE_PIECES_P2_PT5_game_state: begin
        rb = M_regfile_addr_temp2;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = DECLARE_DRAW_game_state;
        end else begin
          rb = M_regfile_addr_temp2;
          M_game_state_d = SELECT_BOX_P2_game_state;
        end
      end
      SELECT_BOX_P2_game_state: begin
        if (button_1) begin
          ra = M_regfile_addr_box00;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P2_game_state;
        end
        if (button_2) begin
          ra = M_regfile_addr_box01;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P2_game_state;
        end
        if (button_3) begin
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P2_game_state;
        end
        if (button_4) begin
          ra = M_regfile_addr_box10;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P2_game_state;
        end
        if (button_5) begin
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P2_game_state;
        end
        if (button_6) begin
          ra = M_regfile_addr_box12;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P2_game_state;
        end
        if (button_7) begin
          ra = M_regfile_addr_box20;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P2_game_state;
        end
        if (button_8) begin
          ra = M_regfile_addr_box21;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P2_game_state;
        end
        if (button_9) begin
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_SIZE_P2_game_state;
        end
      end
      SELECT_SIZE_P2_game_state: begin
        if (button_a) begin
          asel = 1'h1;
          rb = M_regfile_addr_pieces_remaining_small_p2;
          alufn = M_alu_op_code_lt;
          rc = M_regfile_addr_temp1;
          we = 1'h1;
          M_game_state_d = CHECK_SIZE_SMALL_P2_game_state;
        end
        if (button_b) begin
          asel = 1'h1;
          rb = M_regfile_addr_pieces_remaining_med_p2;
          alufn = M_alu_op_code_lt;
          rc = M_regfile_addr_temp1;
          we = 1'h1;
          M_game_state_d = CHECK_SIZE_MED_P2_game_state;
        end
        if (button_c) begin
          asel = 1'h1;
          rb = M_regfile_addr_pieces_remaining_large_p2;
          alufn = M_alu_op_code_lt;
          rc = M_regfile_addr_temp1;
          we = 1'h1;
          M_game_state_d = CHECK_SIZE_LARGE_P2_game_state;
        end
        if (button_d) begin
          asel = 1'h1;
          rb = 1'h0;
          alufn = M_alu_op_code_t_a;
          rc = M_regfile_addr_box_addr;
          we = 1'h1;
          M_game_state_d = SELECT_BOX_P2_game_state;
        end
      end
      CHECK_SIZE_SMALL_P2_game_state: begin
        rb = M_regfile_addr_temp1;
        if (rb_data == 1'h0) begin
          literal = 4'ha;
          rb = M_regfile_addr_temp1;
          bsel = 1'h1;
          alufn = M_alu_op_code_t_b;
          rc = M_regfile_addr_selected_size_p2;
          we = rb_data[0+0-:1];
          M_game_state_d = SELECT_BOX_P2_game_state;
        end else begin
          literal = 4'ha;
          rb = M_regfile_addr_temp1;
          bsel = 1'h1;
          alufn = M_alu_op_code_t_b;
          rc = M_regfile_addr_selected_size_p2;
          we = rb_data[0+0-:1];
          M_game_state_d = VALIDATE_PLACEMENT_P2_PT1_game_state;
        end
      end
      CHECK_SIZE_MED_P2_game_state: begin
        rb = M_regfile_addr_temp1;
        if (rb_data == 1'h0) begin
          literal = 5'h10;
          rb = M_regfile_addr_temp1;
          bsel = 1'h1;
          alufn = M_alu_op_code_t_b;
          rc = M_regfile_addr_selected_size_p2;
          we = rb_data[0+0-:1];
          M_game_state_d = SELECT_BOX_P2_game_state;
        end else begin
          literal = 5'h10;
          rb = M_regfile_addr_temp1;
          bsel = 1'h1;
          alufn = M_alu_op_code_t_b;
          rc = M_regfile_addr_selected_size_p2;
          we = rb_data[0+0-:1];
          M_game_state_d = VALIDATE_PLACEMENT_P2_PT1_game_state;
        end
      end
      CHECK_SIZE_LARGE_P2_game_state: begin
        rb = M_regfile_addr_temp1;
        if (rb_data == 1'h0) begin
          literal = 5'h16;
          rb = M_regfile_addr_temp1;
          bsel = 1'h1;
          alufn = M_alu_op_code_t_b;
          rc = M_regfile_addr_selected_size_p2;
          we = rb_data[0+0-:1];
          M_game_state_d = SELECT_BOX_P2_game_state;
        end else begin
          literal = 5'h16;
          rb = M_regfile_addr_temp1;
          bsel = 1'h1;
          alufn = M_alu_op_code_t_b;
          rc = M_regfile_addr_selected_size_p2;
          we = rb_data[0+0-:1];
          M_game_state_d = VALIDATE_PLACEMENT_P2_PT1_game_state;
        end
      end
      VALIDATE_PLACEMENT_P2_PT1_game_state: begin
        rb = M_regfile_addr_box_addr;
        ra = rb_data[0+4-:5];
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_temp2;
        we = 1'h1;
        M_game_state_d = VALIDATE_PLACEMENT_P2_PT2_game_state;
      end
      VALIDATE_PLACEMENT_P2_PT2_game_state: begin
        rb = M_regfile_addr_temp2;
        ra = M_regfile_addr_selected_size_p2;
        alufn = M_alu_op_code_sub;
        rc = M_regfile_addr_temp3;
        we = 1'h1;
        M_game_state_d = VALIDATE_PLACEMENT_P2_PT3_game_state;
      end
      VALIDATE_PLACEMENT_P2_PT3_game_state: begin
        literal = 2'h2;
        bsel = 1'h1;
        ra = M_regfile_addr_temp3;
        alufn = M_alu_op_code_ltq;
        rc = M_regfile_addr_temp3;
        we = 1'h1;
        M_game_state_d = VALIDATE_PLACEMENT_P2_PT4_game_state;
      end
      VALIDATE_PLACEMENT_P2_PT4_game_state: begin
        rb = M_regfile_addr_temp3;
        if (rb_data == 1'h0) begin
          rb = M_regfile_addr_temp3;
          M_game_state_d = PLACE_PIECE_P2_game_state;
        end else begin
          rb = M_regfile_addr_temp3;
          M_game_state_d = SELECT_BOX_P2_game_state;
        end
      end
      PLACE_PIECE_P2_game_state: begin
        rb = M_regfile_addr_selected_size_p2;
        ra = M_regfile_addr_box_addr;
        alufn = M_alu_op_code_t_b;
        ra2sel = 1'h1;
        we = 1'h1;
        M_game_state_d = COMPLETE_ROW_0_CHECK_BOX_00_P2_game_state;
      end
      COMPLETE_ROW_0_CHECK_BOX_00_P2_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box00;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_ROW_0_CHECK_BOX_01_P2_game_state;
      end
      COMPLETE_ROW_0_CHECK_BOX_01_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box01;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_1_CHECK_BOX_10_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box01;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_0_CHECK_BOX_02_P2_game_state;
        end
      end
      COMPLETE_ROW_0_CHECK_BOX_02_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_1_CHECK_BOX_10_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P2_WON_game_state;
        end
      end
      COMPLETE_ROW_1_CHECK_BOX_10_P2_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box10;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_ROW_1_CHECK_BOX_11_P2_game_state;
      end
      COMPLETE_ROW_1_CHECK_BOX_11_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_2_CHECK_BOX_20_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_1_CHECK_BOX_12_P2_game_state;
        end
      end
      COMPLETE_ROW_1_CHECK_BOX_12_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box12;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_2_CHECK_BOX_20_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box12;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P2_WON_game_state;
        end
      end
      COMPLETE_ROW_2_CHECK_BOX_20_P2_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box20;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_ROW_2_CHECK_BOX_21_P2_game_state;
      end
      COMPLETE_ROW_2_CHECK_BOX_21_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box21;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_0_CHECK_BOX_00_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box21;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_ROW_2_CHECK_BOX_22_P2_game_state;
        end
      end
      COMPLETE_ROW_2_CHECK_BOX_22_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_0_CHECK_BOX_00_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P2_WON_game_state;
        end
      end
      COMPLETE_COL_0_CHECK_BOX_00_P2_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box00;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_COL_0_CHECK_BOX_01_P2_game_state;
      end
      COMPLETE_COL_1_CHECK_BOX_10_P2_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box10;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_COL_1_CHECK_BOX_11_P2_game_state;
      end
      COMPLETE_COL_2_CHECK_BOX_20_P2_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box20;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_COL_2_CHECK_BOX_21_P2_game_state;
      end
      COMPLETE_COL_0_CHECK_BOX_01_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box01;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_1_CHECK_BOX_10_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box01;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_0_CHECK_BOX_02_P2_game_state;
        end
      end
      COMPLETE_COL_1_CHECK_BOX_11_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_2_CHECK_BOX_20_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_1_CHECK_BOX_12_P2_game_state;
        end
      end
      COMPLETE_COL_2_CHECK_BOX_21_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box21;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_DIA_0_CHECK_BOX_00_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box21;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_2_CHECK_BOX_22_P2_game_state;
        end
      end
      COMPLETE_COL_0_CHECK_BOX_02_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_1_CHECK_BOX_10_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P2_WON_game_state;
        end
      end
      COMPLETE_COL_1_CHECK_BOX_12_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box12;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_COL_2_CHECK_BOX_20_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box12;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P2_WON_game_state;
        end
      end
      COMPLETE_COL_2_CHECK_BOX_22_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_DIA_0_CHECK_BOX_00_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P2_WON_game_state;
        end
      end
      COMPLETE_DIA_0_CHECK_BOX_00_P2_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box00;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_DIA_0_CHECK_BOX_11_P2_game_state;
      end
      COMPLETE_DIA_0_CHECK_BOX_11_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_DIA_1_CHECK_BOX_20_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_DIA_0_CHECK_BOX_22_P2_game_state;
        end
      end
      COMPLETE_DIA_0_CHECK_BOX_22_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_DIA_1_CHECK_BOX_20_P2_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box22;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P2_WON_game_state;
        end
      end
      COMPLETE_DIA_1_CHECK_BOX_20_P2_game_state: begin
        literal = 2'h3;
        rb = M_regfile_addr_temp4;
        bsel = 1'h1;
        ra = M_regfile_addr_box20;
        alufn = M_alu_op_code_mod;
        rc = M_regfile_addr_temp4;
        we = 1'h1;
        M_game_state_d = COMPLETE_DIA_1_CHECK_BOX_11_P2_game_state;
      end
      COMPLETE_DIA_1_CHECK_BOX_11_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = SELECT_BOX_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box11;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = COMPLETE_DIA_1_CHECK_BOX_02_P2_game_state;
        end
      end
      COMPLETE_DIA_1_CHECK_BOX_02_P2_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data[0+0-:1] == 1'h1) begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = SELECT_BOX_P1_game_state;
        end else begin
          literal = 2'h3;
          rb = M_regfile_addr_temp4;
          bsel = 1'h1;
          ra = M_regfile_addr_box02;
          alufn = M_alu_op_code_mod;
          rc = M_regfile_addr_temp4;
          we = 1'h1;
          M_game_state_d = HAS_P2_WON_game_state;
        end
      end
      HAS_P2_WON_game_state: begin
        rb = M_regfile_addr_temp4;
        if (rb_data == 1'h1) begin
          rb = M_regfile_addr_temp4;
          M_game_state_d = MAKE_BOX_00_MIN_P1_game_state;
        end else begin
          rb = M_regfile_addr_temp4;
          M_game_state_d = DECLARE_P2_WINNER_game_state;
        end
      end
      DECLARE_P1_WINNER_game_state: begin
        finished = 1'h1;
        literal = 1'h1;
        bsel = 1'h1;
        alufn = M_alu_op_code_t_b;
        rc = M_regfile_addr_winner;
        finished = 1'h1;
        we = 1'h1;
        M_game_state_d = END_game_state;
      end
      DECLARE_P2_WINNER_game_state: begin
        finished = 1'h1;
        literal = 2'h2;
        bsel = 1'h1;
        alufn = M_alu_op_code_t_b;
        rc = M_regfile_addr_winner;
        finished = 1'h1;
        we = 1'h1;
        M_game_state_d = END_game_state;
      end
      DECLARE_DRAW_game_state: begin
        finished = 1'h1;
        asel = 1'h1;
        alufn = M_alu_op_code_t_a;
        rc = M_regfile_addr_winner;
        finished = 1'h1;
        we = 1'h1;
        M_game_state_d = END_game_state;
      end
      END_game_state: begin
        finished = 1'h1;
        if ((|{button_0, button_asterisk, button_hash})) begin
          finished = 1'h1;
          M_game_state_d = START_game_state;
        end
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_game_state_q <= 1'h0;
    end else begin
      M_game_state_q <= M_game_state_d;
    end
  end
  
endmodule
