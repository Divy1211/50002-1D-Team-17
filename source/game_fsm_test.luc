module game_fsm_test (
    input clk,  // clock
    input rst,  // reset

    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8],     // DIP switches on IO Shield
    
    output display[16]
  ) {
  
  .clk(clk), .rst(rst) {
    game_fsm game;
    regfile regf;
  }
  alu aluTest;

  always {
    game.button_0 = 0;
    game.button_1 = 0;
    game.button_2 = 0;
    game.button_3 = 0;
    game.button_4 = 0;
    game.button_5 = 0;
    game.button_6 = 0;
    game.button_7 = 0;
    game.button_8 = 0;
    game.button_9 = 0;

    game.button_a = 0;
    game.button_b = 0;
    game.button_c = 0;
    game.button_d = 0;

    game.button_asterisk = 0;
    game.button_hash = 0;

    game.rb_data = 0;

    regf.ra = game.ra;
    regf.rb = game.rb;
    regf.rc = game.rc;
    regf.ra2sel = game.ra2sel;
    regf.we = game.we;

    aluTest.a = regf.ra_data;
    aluTest.b = regf.rb_data;
    aluTest.asel = game.asel;
    aluTest.bsel = game.bsel;
    aluTest.wdsel = game.wdsel;
    aluTest.alufn = game.alufn;
    aluTest.literal = game.literal;

    regf.data = aluTest.out;

    regf.debug_in = 0;

    game.rb_data = regf.rb_data;

    display = 0;

    if(io_button[0]) {
      case(io_dip[1][3:0]) {
        0:
          game.button_0 = 1;
        1:
          game.button_1 = 1;
        2:
          game.button_2 = 1;
        3:
          game.button_3 = 1;
        4:
          game.button_4 = 1;
        5:
          game.button_5 = 1;
        6:
          game.button_6 = 1;
        7:
          game.button_7 = 1;
        8:
          game.button_8 = 1;
        9:
          game.button_9 = 1;
        10:
          game.button_a = 1;
        11:
          game.button_b = 1;
        12:
          game.button_c = 1;
        13:
          game.button_d = 1;
        14:
          game.button_asterisk = 1;
        15:
          game.button_hash = 1;
      }
    }
    
    case(io_dip[2][0]) {
      0:
        display = game.state;
      1:
        regf.debug_in = io_dip[0][4:0];
        display = regf.debug_out;
    }
  }
}
