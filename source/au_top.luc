/**
* Alchitry IO Board Interface
*/

module au_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx,          // USB->Serial output
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8],     // DIP switches on IO Shield

    output outled,
    output keypadrow[4],
    input keypadcol[4]
  ) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    .rst(rst) {
      custom_clk cclk;
      fsm state = {START, MANUAL, AUTO};
      wave wave1;                                                               // fancy wave effect
      multi_seven_seg seven_seg_display;
      ws2812b_writer led_out;
    }
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
  
  .clk(cclk.out) {
    .rst(rst) {
      keypad_driver keypad;
      motherboard main_mb;
    }
  }

  always {
    
    led_out.update = 1;
    led_out.color = main_mb.disp_out[led_out.pixel];
    outled = led_out.led;
    
    reset_cond.in = (keypad.button_hash | keypad.button_asterisk); // input raw inverted reset signal
    rst = reset_cond.out;
    
    usb_tx = usb_rx;        // loop serial port
    
    led = 8h00;             // turn LEDs off
    
    io_led = 3x{{8h00}};    // turn LEDs off
    io_seg = 8hff;          // turn segments off
    io_sel = 4hf;           // select no digits

    seven_seg_display.values[0] = 0;
    seven_seg_display.values[1] = 0;
    seven_seg_display.values[2] = 0;
    seven_seg_display.values[3] = 0;

    keypadrow = keypad.out_row;
    keypad.in_col = keypadcol;

    main_mb.io_dip = {8b0, 8b0, 8b0};
    main_mb.button_0 = 0;
    main_mb.button_1 = 0;
    main_mb.button_2 = 0;
    main_mb.button_3 = 0;
    main_mb.button_4 = 0;
    main_mb.button_5 = 0;
    main_mb.button_6 = 0;
    main_mb.button_7 = 0;
    main_mb.button_8 = 0;
    main_mb.button_9 = 0;

    main_mb.button_a = 0;
    main_mb.button_b = 0;
    main_mb.button_c = 0;
    main_mb.button_d = 0;
    main_mb.button_asterisk = 0;
    main_mb.button_hash = 0;


    case (state.q) {
      state.START:
          state.d = state.MANUAL;
      state.MANUAL:
        main_mb.io_dip = io_dip;

        main_mb.button_0 = keypad.button_0;
        main_mb.button_1 = keypad.button_1;
        main_mb.button_2 = keypad.button_2;
        main_mb.button_3 = keypad.button_3;
        main_mb.button_4 = keypad.button_4;
        main_mb.button_5 = keypad.button_5;
        main_mb.button_6 = keypad.button_6;
        main_mb.button_7 = keypad.button_7;
        main_mb.button_8 = keypad.button_8;
        main_mb.button_9 = keypad.button_9;

        main_mb.button_a = keypad.button_a;
        main_mb.button_b = keypad.button_b;
        main_mb.button_c = keypad.button_c;
        main_mb.button_d = keypad.button_d;

        // main_mb.button_asterisk = keypad.button_asterisk;
        // main_mb.button_hash = keypad.button_hash;

        seven_seg_display.values[0] = main_mb.display[3:0];
        seven_seg_display.values[1] = main_mb.display[7:4];
        seven_seg_display.values[2] = main_mb.display[11:8];
        seven_seg_display.values[3] = main_mb.display[15:12];

        io_seg = seven_seg_display.seg;
        io_sel = seven_seg_display.sel;

        io_led[2][7:4] = keypad.out_row;
        io_led[2][3:0] = keypad.out_col;

        io_led[0][0] = keypad.button_1;
        io_led[0][1] = keypad.button_2;
        io_led[0][2] = keypad.button_3;
        io_led[0][3] = keypad.button_a;
        io_led[0][4] = keypad.button_4;
        io_led[0][5] = keypad.button_5;
        io_led[0][6] = keypad.button_6;
        io_led[0][7] = keypad.button_b;

        io_led[1][0] = keypad.button_7;
        io_led[1][1] = keypad.button_8;
        io_led[1][2] = keypad.button_9;
        io_led[1][3] = keypad.button_c;
        io_led[1][4] = keypad.button_asterisk;
        io_led[1][5] = keypad.button_0;
        io_led[1][6] = keypad.button_hash;
        io_led[1][7] = keypad.button_d;
  }
}