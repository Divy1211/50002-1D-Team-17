/**
* Performs bitwise operations on two 16 bit values
*
* @input a     - 16 bit input from reg A
* @input b     - 16 bit input from reg B
* @input alufn -  6 bit control signal
*   xx 1000: a AND b,
*   xx 1110: a  OR b,
*   xx 0110: a XOR b,
*   xx 1010: output a,
*
* @output out  - 16 bit result of the boolean operation
*/
module boolean (
    input a[16],
    input b[16],
    input alufn[6],
    output out[16]
  ) {  
  always {
    case(alufn[3:0]){
      4b1000:
        out = a & b;
      4b1110:
        out = a | b;
      4b0110:
        out = a ^ b;
      4b1010:
        out = a;
      default:
        out = 16h0000;
    }
  }
}