// boolean module used in ALU module
module boolean (
    input a[16],    // 16 bit input A
    input b[16],    // 16 bit input B
    input alufn[6], // 6 bit input ALUFN
    output out[16]  // 16 bit output BOOLEAN
  ) {

  
  always {

    case(alufn[3:0]){ //using just the first 4 bits of the alufn signal
    
      
      
      default: out = 0; //if alufn is none of the given, return 0

      b1000: out = a & b;        //if alufn = 1000: a AND b
      b1110: out = a | b;        //if alufn = 1110: a OR b
      b0110: out = a ^ b;        //if alufn = 0110: a XOR b
      b1010: out = a;            //if alufn = 1010: return a
      b0111: out = ~(a & b);     //if alufn = 0111: a NAND b
      b0001: out = ~ (a | b);    //if alufn = 0001: a NOR b
      b1001: out = ~ ( a ^ b);   //if alufn = 1001: a XNOR b
      b1100: out = b;            //if alufn = 1100: return b 
      
      default: out = 16b0;      //if alufn is none of the given, return 0
    }
   
  }
}


