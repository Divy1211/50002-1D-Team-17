/**
* ROM containing the test cases for the shifter
* 
* @input test_case   - test case number
*
* @output a          - 16 bit value of a for the requested test case
* @output b          - 16 bit value of b for the requested test case
* @output alufn      -  6 bit alufn control signal for the requested test case
* @output exp_out    - 16 bit expected output for the requested test case
* @output exp_z      -  1 bit expected output for Z flags for the requested test 
* @output exp_v      -  1 bit expected output for V flags for the requested test 
* @output exp_n      -  1 bit expected output for N flags for the requested test 
* @output num_cases  - the total number of test cases provided by this ROM
*/
module rom_shifter (
    input test_case[5],

    output a[16],
    output b[16],
    output alufn[6],
    output exp_out[16],
    output exp_z,
    output exp_v,
    output exp_n,
    output num_cases[5]
  ) {

  const SHL = 6b100000;
  const SHR = 6b100001;
  const SRA = 6b100011;

  // testing all the shifting operations
  const TEST_A =  {  16d10,  16d567,  16d865,  -16d10, -16d456, 16hFD5A};
  const TEST_B =  {   16d2,    16d3,    16d4,    16d2,    16d3,    16d4};
  const ALUFN =   {    SHL,     SHR,     SRA,     SHL,     SHR,     SRA};
  const EXP_ZVN = {  3b000,   3b000,   3b000,   3b001,   3b001,   3b001};
  const EXP_OUT = {16h0028, 16h0046, 16h0036, 16hFFD8, 16h1FC7, 16hFFD5};

  always {
    num_cases = 5d6;
    a = TEST_A[test_case];
    b = TEST_B[test_case];
    alufn = ALUFN[test_case];
    exp_out = EXP_OUT[test_case];
    exp_z = EXP_ZVN[test_case][2];
    exp_v = EXP_ZVN[test_case][1];
    exp_n = EXP_ZVN[test_case][0];
  }
}
