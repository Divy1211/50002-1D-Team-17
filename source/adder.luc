module adder (
    input a[16], //16bit input from regA
    input b[16], //16bit input from regB
    input alufn[6], //6-bit alufn signal
    output out[16], //16-bit output signal
    output z[1], //1-bit output for checking if sum = 0
    output v[1], //1-bit output for checking overflow
    output n[1] //1-bit output for checking if sum is negative
  ) {

  sig sum[16]; //temp variable to compute sum
  
  always {

    b = 16x{alufn[0]} ^ b;

    out = a+b;
    
    n = sum[15]; //MSB of sum determines the sign of sum
    v = (a[15] & (b[15] ^ alufn[0]) & !sum[15]) | (!a[15] & !(b[15] ^ alufn[0]) & sum[15]); //translate the lab3 schematic 
    z = ~|sum; // or reduction to reduce sum into 1-bit, then bitwise negate that value
  }
}
